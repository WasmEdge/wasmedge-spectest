{"source_filename": "memory_fill64.wast",
 "commands": [
  {"type": "module", "line": 6, "filename": "memory_fill64.0.wasm"}, 
  {"type": "action", "line": 22, "action": {"type": "invoke", "field": "test", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 24, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "0"}, {"type": "i64", "value": "65280"}, {"type": "i32", "value": "0"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "assert_return", "line": 26, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "65280"}, {"type": "i64", "value": "65536"}, {"type": "i32", "value": "85"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "module", "line": 28, "filename": "memory_fill64.1.wasm"}, 
  {"type": "assert_trap", "line": 44, "action": {"type": "invoke", "field": "test", "args": []}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "module", "line": 46, "filename": "memory_fill64.2.wasm"}, 
  {"type": "assert_trap", "line": 62, "action": {"type": "invoke", "field": "test", "args": []}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "module", "line": 64, "filename": "memory_fill64.3.wasm"}, 
  {"type": "action", "line": 80, "action": {"type": "invoke", "field": "test", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 82, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "0"}, {"type": "i64", "value": "65536"}, {"type": "i32", "value": "0"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "module", "line": 84, "filename": "memory_fill64.4.wasm"}, 
  {"type": "action", "line": 100, "action": {"type": "invoke", "field": "test", "args": []}, "expected": []}, 
  {"type": "module", "line": 102, "filename": "memory_fill64.5.wasm"}, 
  {"type": "assert_trap", "line": 118, "action": {"type": "invoke", "field": "test", "args": []}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "module", "line": 120, "filename": "memory_fill64.6.wasm"}, 
  {"type": "action", "line": 136, "action": {"type": "invoke", "field": "test", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 138, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "0"}, {"type": "i64", "value": "1"}, {"type": "i32", "value": "0"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "assert_return", "line": 140, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "1"}, {"type": "i64", "value": "65535"}, {"type": "i32", "value": "170"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "assert_return", "line": 142, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "65535"}, {"type": "i64", "value": "65536"}, {"type": "i32", "value": "0"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "module", "line": 145, "filename": "memory_fill64.7.wasm"}, 
  {"type": "action", "line": 162, "action": {"type": "invoke", "field": "test", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 164, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "0"}, {"type": "i64", "value": "18"}, {"type": "i32", "value": "0"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "assert_return", "line": 166, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "18"}, {"type": "i64", "value": "21"}, {"type": "i32", "value": "85"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "assert_return", "line": 168, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "21"}, {"type": "i64", "value": "25"}, {"type": "i32", "value": "170"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "assert_return", "line": 170, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "25"}, {"type": "i64", "value": "28"}, {"type": "i32", "value": "85"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "assert_return", "line": 172, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "28"}, {"type": "i64", "value": "65536"}, {"type": "i32", "value": "0"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "assert_invalid", "line": 175, "filename": "memory_fill64.8.wasm", "text": "unknown memory 0", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 181, "filename": "memory_fill64.9.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 188, "filename": "memory_fill64.10.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 195, "filename": "memory_fill64.11.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 202, "filename": "memory_fill64.12.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 209, "filename": "memory_fill64.13.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 216, "filename": "memory_fill64.14.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 223, "filename": "memory_fill64.15.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 230, "filename": "memory_fill64.16.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 237, "filename": "memory_fill64.17.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 244, "filename": "memory_fill64.18.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 251, "filename": "memory_fill64.19.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 258, "filename": "memory_fill64.20.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 265, "filename": "memory_fill64.21.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 272, "filename": "memory_fill64.22.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 279, "filename": "memory_fill64.23.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 286, "filename": "memory_fill64.24.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 293, "filename": "memory_fill64.25.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 300, "filename": "memory_fill64.26.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 307, "filename": "memory_fill64.27.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 314, "filename": "memory_fill64.28.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 321, "filename": "memory_fill64.29.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 328, "filename": "memory_fill64.30.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 335, "filename": "memory_fill64.31.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 342, "filename": "memory_fill64.32.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 349, "filename": "memory_fill64.33.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 356, "filename": "memory_fill64.34.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 363, "filename": "memory_fill64.35.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 370, "filename": "memory_fill64.36.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 377, "filename": "memory_fill64.37.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 384, "filename": "memory_fill64.38.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 391, "filename": "memory_fill64.39.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 398, "filename": "memory_fill64.40.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 405, "filename": "memory_fill64.41.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 412, "filename": "memory_fill64.42.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 419, "filename": "memory_fill64.43.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 426, "filename": "memory_fill64.44.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 433, "filename": "memory_fill64.45.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 440, "filename": "memory_fill64.46.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 447, "filename": "memory_fill64.47.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 454, "filename": "memory_fill64.48.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 461, "filename": "memory_fill64.49.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 468, "filename": "memory_fill64.50.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 475, "filename": "memory_fill64.51.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 482, "filename": "memory_fill64.52.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 489, "filename": "memory_fill64.53.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 496, "filename": "memory_fill64.54.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 503, "filename": "memory_fill64.55.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 510, "filename": "memory_fill64.56.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 517, "filename": "memory_fill64.57.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 524, "filename": "memory_fill64.58.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 531, "filename": "memory_fill64.59.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 538, "filename": "memory_fill64.60.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 545, "filename": "memory_fill64.61.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 552, "filename": "memory_fill64.62.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 559, "filename": "memory_fill64.63.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 566, "filename": "memory_fill64.64.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 573, "filename": "memory_fill64.65.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 580, "filename": "memory_fill64.66.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 587, "filename": "memory_fill64.67.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 594, "filename": "memory_fill64.68.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 601, "filename": "memory_fill64.69.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 608, "filename": "memory_fill64.70.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 615, "filename": "memory_fill64.71.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "module", "line": 621, "filename": "memory_fill64.72.wasm"}, 
  {"type": "assert_trap", "line": 638, "action": {"type": "invoke", "field": "run", "args": [{"type": "i64", "value": "65280"}, {"type": "i32", "value": "37"}, {"type": "i64", "value": "512"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_return", "line": 641, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "0"}, {"type": "i64", "value": "1"}, {"type": "i32", "value": "0"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "module", "line": 643, "filename": "memory_fill64.73.wasm"}, 
  {"type": "assert_trap", "line": 660, "action": {"type": "invoke", "field": "run", "args": [{"type": "i64", "value": "65279"}, {"type": "i32", "value": "37"}, {"type": "i64", "value": "514"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_return", "line": 663, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "0"}, {"type": "i64", "value": "1"}, {"type": "i32", "value": "0"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}, 
  {"type": "module", "line": 665, "filename": "memory_fill64.74.wasm"}, 
  {"type": "assert_trap", "line": 682, "action": {"type": "invoke", "field": "run", "args": [{"type": "i64", "value": "65279"}, {"type": "i32", "value": "37"}, {"type": "i64", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_return", "line": 685, "action": {"type": "invoke", "field": "checkRange", "args": [{"type": "i64", "value": "0"}, {"type": "i64", "value": "1"}, {"type": "i32", "value": "0"}]}, "expected": [{"type": "i64", "value": "18446744073709551615"}]}]}
